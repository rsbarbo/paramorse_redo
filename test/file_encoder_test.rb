require "minitest/autorun"
require "minitest/pride"
require "./lib/file_encoder"

class FileEncoderTest < Minitest::Test

  def test_read_file
    file_enc = ParaMorse::FileEncoder.new
    result
    assert_equal result.length, file_enc.encode("test/test_1.txt", "test/test_2.txt")
  end

  def test_create_new_files
    file_enc = ParaMorse::FileEncoder.new
    assert_equal [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],file_enc.encode("test/test_1.txt",11, "test/test_2*.txt")
  end

end
